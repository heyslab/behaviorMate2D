// C++ style '//' comments are permitted to comment out the end of lines
// but block style i.e. '/*' will not work
{
    "_controllers": {
        "behavior_controller": { // address behavior arduino is posting message
            "ip": "127.0.0.1",   // to
            "send_port": 5010,
            "receive_port": 5015,
            "serial_port": "\\.\\COM3",
        },
        "position_controller": { // address arduino reading rotary encoder is
            "ip": "127.0.0.1",   // posting messages to
            "send_port": 5020,
            "receive_port": 5025,
            "serial_port": "\\.\\COM4"
        },
        "controllers": {
            "frame_sync": {
                "ip": "127.0.0.1",
                "send_port": 5030,
                "receive_port": 5035,
                "serial_port": "\\.\\COM8",
            }
        }
    },
    "example": { // name for each profile of in this setting file
        "controllers": {
            "behavior_controller": { // address behavior arduino is posting message
                "ip": "127.0.0.1",   // to
                "send_port": 5010,
                "receive_port": 5015,
                "serial_port": "\\.\\COM3",
            },
            "position_controller": { // address arduino reading rotary encoder is
                "ip": "127.0.0.1",   // posting messages to
                "send_port": 5020,
                "receive_port": 5005,
                "serial_port": "\\.\\COM4"
            }
        },
        "reward": {
            "id": "reward"
        },
        // "sensors" is a list of all the sensors that need to be configured on
        // the behavior arduino. See sensor manager class in behavior
        // controller. Default sensor type is to read a ttl pulse/square wave
        // input. a lickport type context  is necessary for rewarding contexts.
        "sensors": [
            {
                "type": "lickport", // "lickport" type sensor is based on the
                                    // MPR121 capacitance touch sensor.
                "pin": 2,           // Interrupt/IRQ pin
                "report_pin": 20    // sets up a ttl pulse to report when the
                                    // sensor is triggered
            },
            {
                "type": "rfid_reader", // rfid tag reader for ID-12LA reader
                "pin": 22 // pin is the reset pin on the ID-12LA breakout
            },
            {
                "pin": 15 // for a TTL pulse sensor all that is needed is pin
            }
        ],
        // "contexts" are time/space localized events that can be configured to
        // occur along the track. See Context Manager in the behavior arduino
        // code for more information
        "contexts": [
            // reward zones are an example of a context and can be configured
            // in this list as well.
            {
                "id": "reward", // every context is required to have a
                                      // unique id
                "type": "operant", // specialized contexts are defined
                                   // through the type field. operant type
                                   // contexts are triggered via sensors i.e.
                                   // the lickport
                "max_duration": 5, // maximum time (in s) the context is allowed
                                   // to be active
                "radius": 120, // radius (in mm) of reward zones
                "valves": [5], // list of arduino pints to activate when the
                               // context starts
                "durations": [60], // list of times to open valves for
                "operant_rate": 2,
                "initial_open": 0,
                "sensor": 2, // pin number associated with the sensor to trigger
                             // operant context.
                //"locations": [500, 1500], // integer or list. list - list of
                                           // locations to place context
                                           // centroids. integer - number of
                                           // locations to randomly shuffle
                                           // context to. absent - context is
                                           // active during entire trial
                "display_color": [104,204,104], // color to make display indicating
                                           // the location of this context
                "decorators": [
                    {
                        "class": "alternating_context"
                    },
                    {
                        "class": "running_context"
                    }
                ]
            }
        ],
        "sync_pin": 12, // a ttl pulse is delivered at the beginning of each
                        // trial to the sync pin.
        "trial_length": 300, // duration (in s) of the trial.
        "position_scale": 1.0, // scales the position updates from aritrary
                               // unitst to mm. IMPORTANT! measure this value
                               // on each rig or position updates will be wrong
        "track_length": 2000, // length of the track/treadmill belt.
    },
    // the _system holde the data directory field. this does not get saved each
    // trial and needs to be set to a directory where the program can write
    // and store files. if windows, ensure to escape backslashes i.e. \\
    "_system": {
        "data_directory":"behaviorData",
        "arduino_controller": "..\\arduino_controller\\arduinoController.exe"
    }
}
