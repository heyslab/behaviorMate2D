// C++ style '//' comments are permitted to comment out the end of lines
// but block style i.e. '/*' will not work
{
    "example": { // name for each profile of in this setting file
        "display_controllers": { // display controller for virtual reality
            "window": {
                "port": 8025,
                "ip": "127.0.0.1",
                "view_angle": 40,
                "deflection": 0
            }
        },
        "position_controller": { // address behavior arduino is posting message
            "ip": "127.0.0.1",   // to
            "send_port": 5010,
            "receive_port": 5015
        },
        "behavior_controller": { // address arduino reading rotary encoder is
            "ip": "127.0.0.1",   // posting messages to
            "send_port": 5020,
            "receive_port": 5025
        },
        "reward": {
            "locations": [ // centroid of reward locations (for fixed rewards).
                500,
                1000,
                1500,
                5000
            ],
            "radius": 200, // radius (in mm) of the reward zones
            "max_duration": 5, // maximum time the reward zone context is
                               // allowed to be on (even if animal is
                               // stationary)
            "type": "fixed", // moving or fixed. fixed requires a list of
                             // loctions moving requires "number" to be set
            //"number": 3    // number of reward locations to be radomly placed
                             // for moving type rewards
            "drop_size": 60, // time (in ms) duration for the reward water valve
                             // to be open
            "pin": 7,        // ardunio pin that the water reward solinoid is
                             // connected to
            "operant_rate": 2, // issue additional rewards for this number of
                               // licks
            "initial_open": 0 // 0 or 1 if set to 1 a non-operant reward is
                              // issued when the reward zone is first entered
        },
        // "sensors" is a list of all the sensors that need to be configured on
        // the behavior arduino. See sensor manager class in behavior
        // controller. Default sensor type is to read a ttl pulse/square wave
        // input. a lickport type context  is necessary for rewarding contexts.
        "sensors": [
            {
              "type": "lickport", // "lickport" type sensor is based on the
                                  // MPR121 capacitance touch sensor.
              "pin": 2,           // Interrupt/IRQ pin
              "report_pin": 20    // sets up a ttl pulse to report when the
                                  // sensor is triggered
            },
            {
                "type": "rfid_reader", // rfid tag reader for ID-12LA reader
                "pin": 22  // pin is the reset pin on the ID-12LA breakout
            }
        ],
         "trial_startup": [
            {
                "ip": "127.0.0.1",
                "port": 5010,
                "message": {
                    "action": "start"
                }
            }
        ],
         "trial_shutdown": [
            {
                "ip": "127.0.0.1",
                "port": 5010,
                "message": {
                    "action": "stop"
                }
            }
        ],
        // "contexts" are time/space localized events that can be configure to
        // occur along the track. See Context Manager in the behavior arduino
        // code for more information
        "contexts": [
            // reward zones are an example of a context and can be configured
            // in this list as well.
            {
                "id": "large_reward", // every context is required to have a
                                      // unique id
                "type": "operant", // specialized contexts are defined
                                   // through the type field. operant type
                                   // contexts are triggered via sensors i.e.
                                   // the lickport
                "max_duration": 5, // maximum time (in s) the context is allowed
                                   // to be active
                "radius": 120, // radius (in mm) of reward zones
                "valves": [7], // list of arduino pints to activate when the
                               // context starts
                "durations": [60], // list of times to open valves for
                "operant_rate": 2,
                "initial_open": 0,
                "sensor": 2, // pin number associated with the sensor to trigger
                             // operant context.
                "locations": [2500, 4500], // integer or list. list - list of
                                           // locations to place context 
                                           // centroids. integer - number of
                                           // locations to randomly shuffle
                                           // context to. absent - context is
                                           // active during entire trial
                "display_color": [0,204,0] // color to make display indicating
                                           // the location of this context
            },
            {
                "id": "fond_dock", // for vr_contexts the name matches the 
                                   // scene name in Unity program
                "type": "vr"       // vr contexts are a specialized type of
                                   // conext which are not handeled by the
                                   // behavior arduino.
            },
            {
                "id": "light_context",
                "type": "pulsed", // pulsed contexts open valves for their
                                  // indicated durations at the interval
                                  // specified
                "valves": [13],
                "durations": [500],
                "interval": 1000
            },
            {
                "id": "odor_context",
                "type": "constant",
                "valves": [3],
                "durations": [-1], // -1 duration means this valve is open the
                                   // whole time
            },
            {
                "id": "tone_context",
                "type": "pulsed",
                "valves": [7],
                "durations": [500],
                "interval": 1000,
                "frequency": 262 // contexts with a frequency set up valves to
                                 // play a tone.
            }
        ],
        // trial attrs allow for a custom form to overwrite settings or add
        // attitional attributes to the settings field in the .tdml file.
        // Remove this field to stop the form from popping up. Trials will
        // not be allowed to start without completed attribute forms.
        "_trial_attrs": {
            "fields": [
                {
                    "key": "trial_length", // if this key matches a field in the
                                           // settings.json file, the value will
                                           // be replaced by the entry each
                                           // trial.
                    "type": "int"
                },
                { 
                    "key": "drugCondition",
                    "type": "JSONArray",
                    "fields": [
                        { 
                            "key": "drug",
                            "type": "JSONObject",
                            "fields": [
                                {
                                    "key": "time1",
                                    "type": "int"
                                },
                                {
                                    "key": "time2",
                                    "type": "int"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "sync_pin": 12, // a ttl pulse is delivered at the beginning of each
                        // trial to the sync pin.
        "trial_length": 30, // duration (in s) of the trial.
        "position_scale": 1.0, // scales the position updates from aritrary
                               // unitst to mm. IMPORTANT! measure this value
                               // on each rig or position updates will be wrong
        "track_length": 6000, // length of the track/treadmill belt.
        "lap_reset_tag": "", // if not an empty string, to hex code from the
                             // rfid tag signaling lap resets
        "lap_tolerance": 0.05 // compensates for missed lap resets tags. i.e.
                              // if 5, the lap will be resarted at 5% of the
                              // belt length if the position reads 
                              // 1.05*track_length
    },
    // the _system holde the data directory field. this does not get saved each
    // trial and needs to be set to a directory where the program can write
    // and store files. if windows, ensure to escape backslashes i.e. \\
    "_system": {
        "data_directory":"C:\\Users\\admin\\Desktop\\behaviorData"
    }
}
